@use 'variables.scss';
@use 'z-index.scss';
@use 'animations.scss';
@use 'components/terminal.scss';
@use 'components/resize-handle.scss';
@use 'components/code.scss';
@use 'components/editor.scss';
@use 'components/toast.scss';

:root {
  --scrollbar-width: 10px;
  --scrollbar-bg: #ccc;
  --scrollbar-thumb-bg: #888;
  --scrollbar-thumb-hover-bg: #555;
  --scrollbar-radius: 10px;
}

html,
body {
  height: 100%;
  width: 100%;
  scrollbar-width: thin;
  scrollbar-color: var(--scrollbar-thumb-bg) transparent;
}

html[data-theme="dark"] {
  select {
    background-color: #141414 !important;
  }

  option {
    background-color: #141414 !important;
  }
}

/* Para navegadores WebKit */
*::-webkit-scrollbar {
  width: var(--scrollbar-width) !important;
  height: var(--scrollbar-width) !important;
}

*::-webkit-scrollbar-track {
  background: transparent !important;
  border-radius: var(--scrollbar-radius) !important;
}

*::-webkit-scrollbar-thumb {
  background-color: var(--scrollbar-thumb-bg) !important;
  border-radius: var(--scrollbar-radius) !important;
  border: 2px solid transparent !important;
  background-clip: padding-box !important;
}

*::-webkit-scrollbar-thumb:hover {
  background-color: var(--scrollbar-thumb-hover-bg) !important;
}

/* Mostrar scrollbar apenas quando o mouse estiver sobre o elemento */
*:hover::-webkit-scrollbar-thumb {
  background-color: var(--scrollbar-thumb-bg) !important;
}

/* Modo Dark */
@media (prefers-color-scheme: dark) {
  :root {
    --scrollbar-bg: #333;
    --scrollbar-thumb-bg: #666;
    --scrollbar-thumb-hover-bg: #444;
  }
}

.i-bolt\:chat {
  --un-icon: url('/icons/chat.svg');
  -webkit-mask: var(--un-icon) no-repeat;
  mask: var(--un-icon) no-repeat;
  -webkit-mask-size: 100% 100%;
  mask-size: 100% 100%;
  background-color: currentColor;
  color: inherit;
  width: 1em;
  height: 1em;
}

.i-humbleicons\:upload {
  --un-icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 10v9m0-9l3 3m-3-3l-3 3m8.5 2c1.519 0 2.5-1.231 2.5-2.75a2.75 2.75 0 0 0-2.016-2.65A5 5 0 0 0 8.37 8.108a3.5 3.5 0 0 0-1.87 6.746'/%3E%3C/svg%3E");
  -webkit-mask: var(--un-icon) no-repeat;
  mask: var(--un-icon) no-repeat;
  -webkit-mask-size: 100% 100%;
  mask-size: 100% 100%;
  background-color: currentColor;
  color: inherit;
  width: 1.2em;
  height: 1.2em;
}

.MarkdownContent {
  line-height: 1.5rem;
  color: var(--bolt-elements-textPrimary)
}

.MarkdownContent>*:not(:last-child) {
  margin-block-end: 16px
}

.MarkdownContent .artifact {
  margin: 1.5em 0
}

.MarkdownContent .artifact:first-child {
  margin-block-start: 0
}

.MarkdownContent .artifact:last-child {
  margin-block-end: 0
}

.MarkdownContent :is(h1, h2, h3, h4, h5, h6):not(:has(.actions), .actions *) {
  margin-block-start: 24px;
  margin-block-end: 16px;
  font-weight: 600;
  line-height: 1.25;
  color: var(--bolt-elements-textPrimary)
}

.MarkdownContent h1 {
  font-size: 2em;
  border-bottom: 1px solid var(--bolt-elements-borderColor);
  padding-bottom: .3em
}

.MarkdownContent h2 {
  font-size: 1.5em;
  border-bottom: 1px solid var(--bolt-elements-borderColor);
  padding-bottom: .3em
}

.MarkdownContent h3 {
  font-size: 1.25em
}

.MarkdownContent h4 {
  font-size: 1em
}

.MarkdownContent h5 {
  font-size: .875em
}

.MarkdownContent h6 {
  font-size: .85em;
  color: #6a737d
}

.MarkdownContent p {
  white-space: pre-wrap;
  word-wrap: break-word
}

.MarkdownContent p:not(:last-of-type) {
  margin-block-start: 0;
  margin-block-end: 16px
}

.MarkdownContent a {
  color: var(--bolt-elements-messages-linkColor);
  text-decoration: none;
  cursor: pointer
}

.MarkdownContent a:hover {
  text-decoration: underline
}

.MarkdownContent :not(pre)>code {
  font-family: var(--bolt-font-monospace);
  font-size: 13px
}

.MarkdownContent :not(pre)>code:not(:has(.actions), .actions *) {
  border-radius: 6px;
  padding: .2em .4em;
  background-color: var(--bolt-elements-messages-inlineCode-background);
  color: var(--bolt-elements-messages-inlineCode-text)
}

.MarkdownContent .actions pre {
  padding: 20px 16px
}

.MarkdownContent pre:not(:has(.actions), .actions *):not(:has(.file-selections), .file-selections *) {
  padding: 20px 16px;
  border-radius: 6px
}

.MarkdownContent pre:has(>code) {
  font-family: var(--bolt-font-monospace);
  font-size: 13px;
  background: transparent;
  overflow-x: auto;
  min-width: 0
}

.MarkdownContent blockquote {
  margin: 0;
  padding: 0 1em;
  color: var(--bolt-elements-textTertiary);
  border-left: .25em solid var(--bolt-elements-borderColor)
}

.MarkdownContent :is(ul, ol):not(:has(.actions), .actions *) {
  padding-left: 2em;
  margin-block-start: 0;
  margin-block-end: 16px
}

.MarkdownContent ul:not(:has(.actions), .actions *) {
  list-style-type: disc
}

.MarkdownContent ol:not(:has(.actions), .actions *) {
  list-style-type: decimal
}

.MarkdownContent li:not(:has(.actions), .actions *)+li {
  margin-block-start: 8px
}

.MarkdownContent li:not(:has(.actions), .actions *)>*:not(:last-child) {
  margin-block-end: 16px
}

.MarkdownContent :is(ol, li):not(:has(.actions), .actions *) .shiki {
  margin: 16px 0
}

.MarkdownContent img {
  max-width: 100%;
  box-sizing: border-box
}

.MarkdownContent hr {
  height: .25em;
  padding: 0;
  margin: 24px 0;
  background-color: var(--bolt-elements-borderColor);
  border: 0
}

.MarkdownContent table {
  border-collapse: collapse;
  width: 100%;
  margin-block-end: 16px
}

.MarkdownContent table :is(th, td) {
  padding: 6px 13px;
  border: 1px solid #dfe2e5
}

.MarkdownContent table tr:nth-child(2n) {
  background-color: #f6f8fa
}

.PreviewError {
  overflow: hidden
}

.PreviewError * {
  display: inline;
  font-family: var(--bolt-font-monospace) !important;
  font-size: .66rem !important;
  line-height: 1rem
}

.PreviewError li[role=treeitem]:has(ol[role=group]:not(:empty)) {
  display: block
}

.PreviewError li[role=treeitem]:has(ol[role=group]:not(:empty)) ol[role=group] li[role=treeitem] {
  display: block
}

*:has(+.StickyPotentialErrors_y32cp_1) {
  margin-bottom: auto
}

.Shadow_11hxj_1 {
  background: linear-gradient(to top, var(--bolt-elements-bg-depth-1) 30%, transparent)
}

.PromptEffectContainer {
  --prompt-container-offset: 50px;
  --prompt-line-stroke-width: 1px;
  position: absolute;
  pointer-events: none;
  inset: calc(var(--prompt-container-offset) / -2);
  width: calc(100% + var(--prompt-container-offset));
  height: calc(100% + var(--prompt-container-offset))
}

.PromptEffectContainer .PromptEffectLine {
  width: calc(100% - var(--prompt-container-offset) + var(--prompt-line-stroke-width));
  height: calc(100% - var(--prompt-container-offset) + var(--prompt-line-stroke-width));
  x: calc(var(--prompt-container-offset) / 2 - var(--prompt-line-stroke-width) / 2);
  y: calc(var(--prompt-container-offset) / 2 - var(--prompt-line-stroke-width) / 2);
  rx: calc(8px - var(--prompt-line-stroke-width));
  fill: transparent;
  stroke-width: var(--prompt-line-stroke-width);
  stroke: url(#line-gradient);
  stroke-dasharray: 35px 65px;
  stroke-dashoffset: 10
}

.PromptEffectContainer .PromptShine {
  fill: url(#shine-gradient);
  mix-blend-mode: overlay
}

.BaseChat[data-chat-visible=false] {
  --workbench-left: 68px;
  --workbench-inner-width: calc(100% - var(--workbench-left) - 1rem)
}

.BaseChat[data-chat-visible=false] .Chat {
  transition-timing-function: cubic-bezier(.4, 0, .2, 1);
  transition-property: transform, opacity;
  transition-duration: .2s;
  transform: translateZ(0);
  opacity: 0
}

.ExamplePrompts {
  opacity: 0;
  animation: .25s ease-out 0s 1 _fade-and-move-in forwards
}

.Stacks {
  opacity: 0;
  animation: .25s ease-out .15s 1 _fade-and-move-in forwards
}

.StackBlitzLogo {
  display: block;
  height: 32px;
  width: 107.84px;
  background-color: currentColor;
  mask-image: url(/stackblitz-logo.svg);
  mask-position: center;
  mask-repeat: no-repeat;
  mask-size: contain
}

.RayContainer {
  --gradient-opacity: .85;
  --ray-gradient: radial-gradient(rgba(83, 196, 255, var(--gradient-opacity)) 0%, rgba(43, 166, 255, 0) 100%);
  transition: opacity .25s linear;
  position: fixed;
  inset: 0;
  pointer-events: none;
  user-select: none
}

.RayContainer[data-chat-started=false] {
  animation: .25s linear 0s 1 _fade-in
}

.RayContainer[data-theme=light] {
  --gradient-opacity: .5
}

.RayContainer[data-theme=light][data-chat-started=true] {
  opacity: .5
}

.RayContainer .LightRay {
  position: absolute;
  border-radius: 100%;
  background: var(--ray-gradient)
}

.RayContainer .RayOne {
  width: 480px;
  height: 680px;
  transform: rotate(80deg);
  top: -540px;
  left: 250px;
  filter: blur(110px)
}

.RayContainer .RayTwo {
  width: 110px;
  height: 400px;
  transform: rotate(-20deg);
  top: -280px;
  left: 350px;
  mix-blend-mode: overlay;
  opacity: .6;
  filter: blur(60px)
}

.RayContainer .RayThree {
  width: 400px;
  height: 370px;
  top: -350px;
  left: 200px;
  mix-blend-mode: overlay;
  opacity: .6;
  filter: blur(21px)
}

.RayContainer .RayFour {
  position: absolute;
  width: 330px;
  height: 370px;
  top: -330px;
  left: 50px;
  mix-blend-mode: overlay;
  opacity: .5;
  filter: blur(21px)
}

.RayContainer .RayFive {
  position: absolute;
  width: 110px;
  height: 400px;
  transform: rotate(-40deg);
  top: -280px;
  left: -10px;
  mix-blend-mode: overlay;
  opacity: .8;
  filter: blur(60px)
}

@keyframes _fade-in {
  0% {
    opacity: 0
  }

  to {
    opacity: 1
  }
}

@keyframes _fade-and-move-in {
  0% {
    opacity: 0;
    transform: translateY(var(--translate-y, 10px))
  }

  to {
    opacity: 1;
    transform: translateY(0)
  }
}